// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  firstName String? //can be null(optional)
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  //relationship
  notes     Order[]
  account   Account?

  @@map("users") //users id "table's name" in Postgres SQL
}

model Account {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  userId   Int    @unique
  user     User   @relation(fields: [userId], references: [id])

  @@map("accounts")
}

model Product {
  id           Int            @id @default(autoincrement())
  name         String
  description  String
  url          String
  // other fields ...
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  //relationship
  orderdetails OrderDetails[]

  @@map("products")
}

model Order {
  id Int @id @default(autoincrement())

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  //relationship
  userId       Int? //like "foreign key"
  user         User?          @relation(fields: [userId], references: [id], onDelete: SetNull)
  orderdetails OrderDetails[]

  @@map("orders")
}

model OrderDetails {
  id Int @id @default(autoincrement())

  quantity  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  //relationship
  productId Int //like "foreign key"
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  order     Order    @relation(fields: [orderId], references: [id])

  @@map("orderdetails")
}
